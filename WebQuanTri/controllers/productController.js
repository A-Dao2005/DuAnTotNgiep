const Product = require('../models/Product');

exports.getProducts = async (req, res) => {
  try {
    const products = await Product.find().sort({ createdAt: -1 });
    console.log(`üì¶ L·∫•y ƒë∆∞·ª£c ${products.length} s·∫£n ph·∫©m`);
    res.json(products);
  } catch (error) {
    console.error('‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m:', error);
    res.status(500).json({ error: 'L·ªói server khi l·∫•y s·∫£n ph·∫©m' });
  }
};

exports.addProduct = async (req, res) => {
  try {
    const newProduct = new Product(req.body);
    const saved = await newProduct.save();
    console.log('‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m:', saved.tenSanPham);
    res.status(201).json(saved);
  } catch (error) {
    console.error('‚ùå L·ªói khi th√™m s·∫£n ph·∫©m:', error);
    res.status(400).json({ error: 'L·ªói khi th√™m s·∫£n ph·∫©m', details: error.message });
  }
};

exports.updateProduct = async (req, res) => {
  try {
    const { id } = req.params;
    const updated = await Product.findByIdAndUpdate(id, req.body, { new: true });
    if (!updated) {
      return res.status(404).json({ error: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m' });
    }
    console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·∫£n ph·∫©m:', updated.tenSanPham);
    res.json(updated);
  } catch (error) {
    console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m:', error);
    res.status(400).json({ error: 'L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m' });
  }
};

exports.deleteProduct = async (req, res) => {
  try {
    const { id } = req.params;
    const deleted = await Product.findByIdAndDelete(id);
    if (!deleted) {
      return res.status(404).json({ error: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m' });
    }
    console.log('‚úÖ ƒê√£ x√≥a s·∫£n ph·∫©m:', deleted.tenSanPham);
    res.json({ success: true, message: 'ƒê√£ x√≥a s·∫£n ph·∫©m th√†nh c√¥ng' });
  } catch (error) {
    console.error('‚ùå L·ªói khi x√≥a s·∫£n ph·∫©m:', error);
    res.status(400).json({ error: 'L·ªói khi x√≥a s·∫£n ph·∫©m' });
  }
};

exports.searchProducts = async (req, res) => {
  try {
    const { query } = req.query;
    if (!query) return res.json([]);
    
    // T√¨m ki·∫øm kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng theo t√™n s·∫£n ph·∫©m
    const products = await Product.find({
      tenSanPham: { $regex: query, $options: 'i' }
    });
    console.log(`üîç T√¨m th·∫•y ${products.length} s·∫£n ph·∫©m cho t·ª´ kh√≥a: ${query}`);
    res.json(products);
  } catch (error) {
    console.error('‚ùå L·ªói khi t√¨m ki·∫øm s·∫£n ph·∫©m:', error);
    res.status(500).json({ error: 'L·ªói server khi t√¨m ki·∫øm' });
  }
};

// API ƒë·ªÉ l·∫•y s·∫£n ph·∫©m theo danh m·ª•c
exports.getProductsByCategory = async (req, res) => {
  try {
    const { category } = req.params;
    const products = await Product.find({ phanLoai: category });
    console.log(`üìÇ L·∫•y ƒë∆∞·ª£c ${products.length} s·∫£n ph·∫©m cho danh m·ª•c: ${category}`);
    res.json(products);
  } catch (error) {
    console.error('‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m theo danh m·ª•c:', error);
    res.status(500).json({ error: 'L·ªói server khi l·∫•y s·∫£n ph·∫©m theo danh m·ª•c' });
  }
};
